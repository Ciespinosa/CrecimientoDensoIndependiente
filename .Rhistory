abline(h = N0, lty = 3)
text(0.5, 250, expression(lambda > 1), cex = 1.2) > text(0.5, 20, expression(lambda < 1), cex = 1.2)
lambdas <- c(0.2, 1, 1.5)
N.all <- sapply(lambdas, function(x) N0 * x^time)
matplot(time, N.all, type="b", xlab = "Years", ylab = "N", pch = 1:3)
abline(h = N0, lty = 3)
text(0.5, 250, expression(lambda > 1), cex = 1.2) > text(0.5, 20, expression(lambda < 1), cex = 1.2)
lambdas <- c(0.5, 1, 1.5)
N.all <- sapply(lambdas, function(x) N0 * x^time)
matplot(time, N.all, type="b", xlab = "Years", ylab = "N", pch = 1:3)
abline(h = N0, lty = 3)
text(0.5, 250, expression(lambda > 1), cex = 1.2) > text(0.5, 20, expression(lambda < 1), cex = 1.2)
sparrows<- c(32,40,44,55,48,72)
años<- 1966:1971
plot(años,sparrows)
plot(años,sparrows, type="b")
sparrows<- c(32,41,44,55,48,72)
años<- 1966:1971
t <- 5
SS6 <- sparrows[1:(t + 1), ]
SS6
SS6 <- sparrows[1:(t+1), ]
SS6 <- sparrows[1:(t+1) ]
SS6
SSgr <- SS6$Count[2:(t + 1)]/SS6$Count[1:t]
install.packages(primer)
install.packages("primer")
data(sparrows)
library(primer)
data(sparrows)
sparrows
?primer
plot(años,sparrows, type="b")
t <- 5
SS6 <- sparrows[1:(t+1), ]
#Calculamos λ para cada generacióndesde t a t+1, y calculamos
#las medias geométricas y aritmeticas.
SS6$Count[2:(t + 1)]
SS6$Count[1:t]
SSgr <- SS6$Count[2:(t + 1)]/SS6$Count[1:t]
SS6
SSgr
lam.A <- sum(SSgr)/t
lam.G <- prod(SSgr)^(1/t)
lam.A
lam.G
N0 <- SS6$Count[1]
plot(0:t, SS6$Count, ylab = "Projected Population Size")
lines(0:t, N0 * lam.A^(0:t), lty = 2)
lines(0:t, N0 * lam.G^(0:t), lty = 1)
plot(0:t, SS6$Count, ylab = "Tamaño de la población proyectada")
lines(0:t, N0 * lam.A^(0:t), lty = 2)
lines(0:t, N0 * lam.G^(0:t), lty = 1)
legend(0, 70, c("Media aritmética", "Media Geométrica"),
title = "Proyecciones basadas en:",
lty = 2:1, bty = "n", xjust = 0)
plot(0:t, SS6$Count, type="b", ylab = "Tamaño de la población proyectada")
1.5*50
(0.5*1.5)^1/2
100*0.375
(0.5*1.5)^(1/2)
100*((0.5*1.5)^(1/2))
100*((0.5*1.5)^(1/1))
lines(0:t, N0 * lam.A^(0:t), lty = 2)
lines(0:t, N0 * lam.G^(0:t), lty = 1)
legend(0, 70, c("Media aritmética", "Media Geométrica"),
title = "Proyecciones basadas en:",
lty = 2:1, bty = "n", xjust = 0)
N<- c(2,4,8,16,32)
month<- 6:10
plot(month, N, type="b",
xlab="Meses de muestreo",
ylab="Tamaño. N")
rates<- N[2:5]/N[1:4]
rates
N<- c(2,6,8,16,32)
rates<- N[2:5]/N[1:4]
rates
N<- c(2,4,8,16,32)
rates<- N[2:5]/N[1:4]
rates
N0<- 2
t<- 0:10
lamda<- 2
N10<- lamda^t*(N0)
N10
plot(t,N10)
plot(t,N10, type="b")
N0 <- c(10, 20, 30)
lambda <- 2
time <- 0:4
Nt.s <- sapply(N0, function(n) n * lambda^time)
Nt.s
matplot(time, Nt.s, pch = 1:3)
matplot(time, Nt.s, type="b", pch = 1:3)
Nt.in<- Nt.s[2:5,]-Nt.s[1:4,]
Nt.in
par(mfcol=c(1,2))
matplot(time, Nt.s, type="b", pch = 1:3)
matplot(time, Nt.s, type="b", log = "y", pch = 1:3)
par(mfcol=c(1,2))
matplot(time, Nt.s, type="b", pch = 1:3)
Nt.s
par(mfcol=c(1,2))
matplot(time, Nt.s, type="b", pch = 1:3)
matplot(time, Nt.s, type="b", log = "y", pch = 1:3)
N0 <- 100
time <- 0:6
lambdas <- c(0.5, 1, 1.5)
N.all <- sapply(lambdas, function(x) N0 * x^time)
matplot(time, N.all, type="b", xlab = "Years", ylab = "N", pch = 1:3)
abline(h = N0, lty = 3)
text(0.5, 250, expression(lambda > 1), cex = 1.2) > text(0.5, 20, expression(lambda < 1), cex = 1.2)
plot(años,sparrows, type="b")
#obtenemos el promedio de la tasa de incremento
t <- 5
SS6 <- sparrows[1:(t+1), ]
#Calculamos λ para cada generacióndesde t a t+1, y calculamos
#las medias geométricas y aritmeticas.
SSgr <- SS6$Count[2:(t + 1)]/SS6$Count[1:t]
lam.A <- sum(SSgr)/t
lam.G <- prod(SSgr)^(1/t)
#graficamos las proyecciones
N0 <- SS6$Count[1]
plot(0:t, SS6$Count, ylab = "Tamaño de la población proyectada")
lines(0:t, N0 * lam.A^(0:t), lty = 2)
lines(0:t, N0 * lam.G^(0:t), lty = 1)
legend(0, 70, c("Media aritmética", "Media Geométrica"),
title = "Proyecciones basadas en:",
lty = 2:1, bty = "n", xjust = 0)
sparrows
plot(años,sparrows, type="b")
plot(sparrows$Year,sparrows$Count, type="b")
install.packages("primer")
SS6
SSgr <- SS6$Count[2:(t + 1)]/SS6$Count[1:t]
SSgr
SSgr
lam.A <- sum(SSgr)/t
lam.G <- prod(SSgr)^(1/t)
lam.A
lam.G
N0 <- SS6$Count[1]
plot(0:t, SS6$Count, ylab = "Tamaño de la población proyectada")
plot(0:t, SS6$Count, type="b", ylab = "Tamaño de la población proyectada")
lines(0:t, N0 * lam.A^(0:t), lty = 2, col="red")
lines(0:t, N0 * lam.G^(0:t), lty = 1, col="blue")
legend(0, 70, c("Media aritmética", "Media Geométrica"),
title = "Proyecciones basadas en:",
lty = 2:1, bty = "n", xjust = 0, col=c("red", "blue"))
N0 * lam.A^(0:t)
p1<- N0 * lam.A^(0:t)
pg1<-N0 * lam.G^(0:t)
pg1, p1
pg1; p1
pg1; p1; ss6$Count
pg1; p1; SS6$Count
str(sparrows)
N0
r<- log(lam.G)
t<- 1:36
crec.exp<- N0 * exp(r * t)
plot(t, crec.exp)
pg1<-N0 * lam.G^(0:t)
pg1
pg1<-N0 * lam.G^(t)
pg1
plot(t, crec.exp, type="l")
lines(t, pg1, type="l", col="blue")
r
crec.exp
sim.Rs
sim.Rs <- sample(x = obs.R, size = years, replace = TRUE)
obs.R <- Count[-1]/Count[-length(Count)]
plot(Year[-1], obs.R, pch=19)
abline(h = 1, lty = 3)
##Que pasa con la tasa de crecimiento?
library(primer)
data("sparrows")
names(sparrows)
attach(sparrows)
plot(Year, Count, type="b", pch=19)
##Que pasa con la lamda
obs.R <- Count[-1]/Count[-length(Count)]
plot(Year[-1], obs.R, pch=19)
abline(h = 1, lty = 3)
##Que pasa con la tasa de crecimiento?
###################
#Vamos a simular
years<- 50
set.seed(3)
sim.Rs <- sample(x = obs.R, size = years, replace = TRUE)
##Ahora tenemos nuestra tasa de incremento para cada año
sim.Rs
sim.Rs
sim.RM <- matrix(sample(obs.R, sims * years, replace = TRUE),
nrow = years, ncol = sims)
output[1] <- Count[Year == max(Year)]
outmat <- sapply(1:sims, function(i) {
for (t in 1:years) output[t + 1] <- output[t] * sim.RM[t,
i]
output
})
##Ahora vamos a realizar 10 simulaciones
sims <- 10
sim.RM <- matrix(sample(obs.R, sims * years, replace = TRUE),
nrow = years, ncol = sims)
output[1] <- Count[Year == max(Year)]
outmat <- sapply(1:sims, function(i) {
output <- numeric(years + 1)
output[1] <- Count[Year == max(Year)]
for (t in 1:years) output[t + 1] <- {
output[t] * sim.Rs[t] }
output <- numeric(years + 1)
output[1] <- Count[Year == max(Year)]
for (t in 1:years) output[t + 1] <- {
output[t] * sim.Rs[t] }
plot(0:years, output, type="l")
##Repitamos el proceso pero ahora sin utilizar set.seed
##Que paso?
##Ahora vamos a realizar 10 simulaciones
sims <- 10
sim.RM <- matrix(sample(obs.R, sims * years, replace = TRUE),
nrow = years, ncol = sims)
output[1] <- Count[Year == max(Year)]
outmat <- sapply(1:sims, function(i) {
for (t in 1:years) output[t + 1] <- output[t] * sim.RM[t,
i]
output
})
matplot(0:years, outmat, type = "l", log = "y")
PopSim <- function(Rs, N0, years = 50, sims = 10) {
sim.RM = matrix(sample(Rs, size = sims * years, replace = TRUE),
nrow = years, ncol = sims)
output <- numeric(years + 1)
output[1] <- N0
outmat <- sapply(1:sims, function(i) {
for (t in 1:years) output[t + 1] <- round(output[t] *
sim.RM[t, i], 0)
output
})
return(outmat)
}
###########################
output <- PopSim(Rs = obs.R, N0 = 43, sims = 1000)
plot(t, output)
length(t)
length(obs.R)
matplot(output)
matplot(output, type="l")
output <- PopSim(Rs = obs.R, N0 = 43, sims = 1000)
matplot(output, type="l")
output <- PopSim(Rs = obs.R, N0 = 43, sims = 1000)
matplot(output, type="l")
dim(output)
N.2053 <- output[51, ]
N.2053
summary(N.2053, digits = 6)
72/9
6/72
72/6
9*5*35
18*35
5*35
18*50
5*50
hist(N.2053, main = "N")
hist(log10(N.2053 + 1), main = "log(N+1)")
abline(v = log10(quantile(N.2053, prob = c(0.0275, 0.975))
))
hist(N.2053, main = "N")
hist(log10(N.2053 + 1), main = "log(N+1)")
abline(v = log10(quantile(N.2053, prob = c(0.0275, 0.975))
+ 1), lty = 3)
par(mfcol=c(2,1))
plot(Year, Count, type="b", pch=19)
obs.R <- Count[-1]/Count[-length(Count)]
plot(Year[-1], obs.R, pch=19)
par(mfcol=c(2,1))
plot(Year, Count, type="b", pch=19)
obs.R <- Count[-1]/Count[-length(Count)]
plot(Year[-1], obs.R, pch=19)
abline(h = 1, lty = 3)
```{r,  fig.cap="Crecimiento y lamda de Sparrows"}
plot(Year, Count, type="b", pch=19)
```
par(mfcol=c(2,1), oma=c(2,1,1,1))
?par
N<- c(2,4,8,16,32)
#Tiempo en el cual se hizo la observación
month<- 6:10
plot(month, N, type="b",
xlab="Meses de muestreo",
ylab="Tamaño. N")
rates<- N[2:5]/N[1:4]
rates
N0<- 2
t<- 0:10
lamda<- 2
N10<- lamda^t*(N0)
N10
N0 <- c(10, 20, 30)
lambda <- 2
time <- 0:4
Nt.s <- sapply(N0, function(n) n * lambda^time)
Nt.s
matplot(time, Nt.s, type="b", pch = 1:3)
tiempo <- seq(1,15, each=3)
tiempo
tiempo <- seq(1,15, by=3)
tiempo
tiempo <- seq(1,15, by=3)
plot(month, N, type="b",
xlab="Meses de muestreo",
ylab="Tamaño. N")
plot(tiempo, N, type="b",
xlab="Meses de muestreo",
ylab="Tamaño. N")
4/2
tasa <- N[2:5]/N[1:4]
tasa <- N[2:5]/N[1:4]
tasa
inicio <- as.POSIXct("2019-01-15")
inicio <- as.POSIXct("2019-01-15")
interval <- 5
end <- start + as.difftime(1, units="months")
end
end <- start + as.difftime(1, units="month")
tiempo <- seq(as.POSIXct("2018-01-15"),as.POSIXct("2019-02-15"), by=30)
tiempo
tiempo <- seq(as.POSIXct("2018-01-15"),as.POSIXct("2019-02-15"), by=60*24*30)
tiempo
60*24*30
tiempo <- seq(as.POSIXct("2018-01-15"),as.POSIXct("2019-02-15"), by=60*60*24*30)
tiempo
tiempo <- seq(as.POSIXct("2018-01-15"),as.POSIXct("2019-02-15"), by=60*60*24*30*3)
tiempo
tiempo <- seq(as.POSIXct("2018-01-15"),as.POSIXct("2019-02-15"), by=60*60*24*30*3)
plot(tiempo, N, type="b",
xlab="Meses de muestreo",
ylab="Tamaño. N")
tiempo
crec <- function(lambda, t, N){
N <- lambda^t * N
return(N)
}
crec(3,3,2)
crec(2,4,2)
N
as.POSIXct("27/10/2019")- as.POSIXct("20/12/2019")
as.POSIXct("2019/27/10")- as.POSIXct("201920/12")
as.POSIXct("2019/27/10")- as.POSIXct("2019/20/12")
as.POSIXct("27/10/2019", format="%d-%m-%Y")- as.POSIXct("20/12/2019", format="%d-%m-%Y")
as.POSIXct("27/10/2019", format="%d-%m-%Y")
as.POSIXct("27/10/2019", format="%d-%m-%y")
format(as.POSIXct("27/10/2019"), format="%d-%m-%y")
format(as.POSIXct("27/10/2019"), format="%d-%m-%y")-format(as.POSIXct("20/12/2019"), format="%d-%m-%y")
format(as.POSIXct("27/10/2019"), format="%d-%m-%y")-format(as.POSIXct("20/12/2019"), format="%d-%m-%y")
format(as.POSIXct("27/10/2019"), format="%d-%m-%y")-format(as.POSIXct("2050*45/12/2019"), format="%d-%m-%y")
50*45
crec(2,4,2)
crec(2,12,2)
crec(2,1,2)
crec(20,4,2)
crec(20,1,2)
Nm <- c(10,20, 30)
Nm <- c(10,20, 30) #tres tamaños distintos
t <- c(1:6)
N0 <- c(10,20, 30) #tres tamaños distintos
t <- c(1:6) #seis periodos
Nm <- sapply(N0, crec(2,t=t, N=N0))
crec <- function(lambda, t, N){
N <- lambda^t * N
return(N)
}
crec(2,t=t, N=N0)
Nm <- crec(2,t=t, N=N0)
Nm
Nm <- crec(2,t=t, N=N0[1])
Nm
N0[1]
t <- c(0:6) #seis periodos
Nm <- crec(2,t=t, N=N0[1])
Nm
for(i in 1:3){
Nm[,i] <- crec(2,t=t, N=N0[i])
}
Nm
N0 <- c(10,20, 30) #tres tamaños distintos
t <- c(0:6) #seis periodos
Nm <- matrix(NA,6,3)
for(i in 1:3){
Nm[,i] <- crec(2,t=t, N=N0[i])
}
crec(2,t=t, N=N0[i])
Nm <- matrix(NA,7,3)
for(i in 1:3){
Nm[,i] <- crec(2,t=t, N=N0[i])
}
Nm[,i] <- crec(2,t=t, N=N0[i])
Nm
matplot(Nm)
matplot(Nm, type="b")
colnames(Nm) <- LETTERS[1:3]
for(i in 1:3){
Nm[,i] <- crec(2,t=t, N=N0[i])
}
matplot(Nm, type="b")
Nm
matplot(Nm, type="b")
matplot(log(Nm), type="b")
Lm <- matrix(NA,7,3)
for(i in 1:3){
Lm[,i] <- crec(lambda = lam,t=t, N=10)
}
lam <- c(0.5,1, 1.5) #tres tamaños distintos
t <- c(0:6) #seis periodos
Lm <- matrix(NA,7,3)
for(i in 1:3){
Lm[,i] <- crec(lambda = lam,t=t, N=10)
}
lam
for(i in 1:3){
Lm[,i] <- crec(lambda = lam[i],t=t, N=10)
}
matplot(Lm, type="b")
t <- c(0:4) #seis periodos
Lm <- matrix(NA,7,3)
for(i in 1:3){
Lm[,i] <- crec(lambda = lam[i],t=t, N=10)
}
matplot(Lm, type="b")
Lm <- matrix(NA,5,3)
lam <- c(0.5,1, 1.5) #tres tamaños distintos
t <- c(0:4) #seis periodos
Lm <- matrix(NA,5,3)
for(i in 1:3){
Lm[,i] <- crec(lambda = lam[i],t=t, N=10)
}
matplot(Lm, type="b")
text(3,40)
text(3,40. "lambda>1 -Pob. Crece")
text( 3,40, "lambda>1 -Pob. Crece")
matplot(Lm, type="b")
text(3,40, "lambda>1 -Pob. Crece")
text(3,30, "lambda>1 -Pob. Crece")
text(2.5,30, "lambda>1 -Pob. Crece")
text(1,0, "lambda<1 - Pob. Decrece")
matplot(Lm, type="b")
text(2.5,30, "lambda>1 - Pob. Crece")
text(2,0, "lambda<1 - Pob. Decrece")
text(3,12, "lambda>1 - Pob. se mantiene")
ninL <- ninfalidos[2:3]/ninfalidos[1:2]
ninL
ninL <- ninfalidos[2:3]/ninfalidos[1:2]
ninfalidos <- c(100, 50, 75)
ninL <- ninfalidos[2:3]/ninfalidos[1:2]
ninL
xL <- mean(ninL)
xL
crec(lambda = xL, t = 3,N = 100)
prod(ninL)
xgL <- prod(ninL)^(1/t)
xgL
xgL <- prod(ninL)^(1/3)
xgL
xgL <- prod(ninL)^(1/3)
crec(lambda = xgL, t = 3,N = 100)
library(sparrows)
install.packages("sparows")
install.packages("sparrows")
install.packages("primer")
data(sparrows)
library(primer)
data(sparrows)
View(sparrows)
library(primer)
data(sparrows)
lambdas <- runif(10, .5, 1.5)
out <- PopSim(Rs=lambdas, years=50, N0=50)
matplot(0:50, out, type='l')
summary(out[51,])
View(sparrows)
head(sparrows, 5)
plot(sparrows$Year, sparrows$Count)
plot(sparrows$Year, sparrows$Count, type="l")
Lm=5
popSp <- sparrows[1:Lm,2]
lambdaSp <- popSp[2:Lm]/popSp[1:Lm-1]
proy1 <- crec(lambda = lambdaSp, t = 1:36-Lm, N = sparrows[Lm,2])
proy1
lamSppg <- prod(lambdaSp)^1/Lm
proy1 <- crec(lambda = lambdaSppg, t = 1:36-Lm, N = sparrows[Lm,2])
proy1 <- crec(lambda = lamSppg, t = 1:36-Lm, N = sparrows[Lm,2])
proy1
proy1 <- c(sparrows$Count[1:Lm-1], proy1)
proy1
lamSppg
proy1 <- crec(lambda = lamSppg, t = 1:36-Lm, N = sparrows[Lm,2])
proy1
proy1 <- crec(lambda = lamSppg, t = 1:(36-Lm), N = sparrows[Lm,2])
proy1
proy1 <- c(sparrows$Count[1:Lm], proy1)
proy1
plot(sparrows$Year, sparrows$Count, type="l")
lines(sparrows$Year, proy1)
lambdaSp <- popSp[2:5]/popSp[1:5-1]
lamSppg <- prod(lambdaSp)^(1/5)
lamSppg
lambdaSp <- popSp[2:5]/popSp[1:5-1]
lamSppg <- prod(lambdaSp)^1/5
lamSppg
